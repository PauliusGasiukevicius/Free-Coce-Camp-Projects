{"version":3,"sources":["Editor.js","Previewer.js","demoText.js","App.js","index.js"],"names":["Editor","_this$props","this","props","onTextChange","text","react_default","a","createElement","className","rows","id","onChange","value","Component","Previewer","dangerouslySetInnerHTML","__html","markedHTML","demoText","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newText","document","getElementById","setState","marked","sanitize","breaks","state","src_Editor","src_Previewer","ReactDOM","render","src_App_0"],"mappings":"6PAmBeA,0LAdX,IAAAC,EACgCC,KAAKC,MAA1BC,EADXH,EACWG,aAAaC,EADxBJ,EACwBI,KAEpB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAf,UACIH,EAAAC,EAAAC,cAAA,YAAUE,KAAK,KAAKD,UAAU,YAAYE,GAAG,SAASC,SAAUR,EAAcS,MAAOR,aAVpFS,cCgBNC,mLAZP,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAf,aACIH,EAAAC,EAAAC,cAAA,OAAKE,KAAK,KAAKD,UAAU,yCAAyCE,GAAG,UACrEK,wBAAyB,CAAEC,OAAQf,KAAKC,MAAMe,uBAT1CJ,6BC6CTK,EA/CD,8qCCsCCC,cA5Bb,SAAAA,IACA,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAkB,IACEC,EAAAC,OAAAE,EAAA,EAAAF,CAAApB,KAAAoB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAxB,QAOFE,aAAe,WAEb,IAAIuB,EAAUC,SAASC,eAAe,UAAUhB,MAChDQ,EAAKS,SAAS,CAACzB,KAAMsB,IACrBN,EAAKS,SAAS,CAACZ,WAAYa,IAAOJ,EAAS,CAACK,UAAU,EAAMC,QAAQ,OAVpEZ,EAAKa,MAAQ,CACX7B,KAAMc,EACND,WAAYa,IAAOZ,EAAU,CAACa,UAAU,EAAMC,QAAQ,KAJ1DZ,wEAgBA,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC2B,EAAD,CAAQ/B,aAAcF,KAAKE,aAAcC,KAAMH,KAAKgC,MAAM7B,OAC1DC,EAAAC,EAAAC,cAAC4B,EAAD,CAAWlB,WAAYhB,KAAKgC,MAAMhB,sBAxBxBJ,aCFlBuB,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASX,SAASC,eAAe","file":"static/js/main.04331f3f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Editor extends Component\r\n{\r\n    render()\r\n    {\r\n        const {onTextChange,text} = this.props;\r\n\r\n        return (\r\n            <div className=\"col\">\r\n                <div className=\"card text-white bg-primary m-1\">\r\n                <div className=\"card-header font-weight-bold\">Editor</div>\r\n                    <textarea rows=\"20\" className=\"card-body\" id=\"editor\" onChange={onTextChange} value={text}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;","import React, {Component} from 'react';\r\n\r\nclass Previewer extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"col\">\r\n                <div className=\"card text-white bg-primary m-1\">\r\n                <div className=\"card-header font-weight-bold\">Previewer</div>\r\n                    <div rows=\"10\" className=\"card-body text-left bg-white text-dark\" id=\"preview\" \r\n                    dangerouslySetInnerHTML={{ __html: this.props.markedHTML }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Previewer;","const demoText = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`;\r\n\r\nexport default demoText;","import React, {Component} from 'react';\nimport './App.css';\nimport Editor from './Editor.js';\nimport Previewer from './Previewer.js';\nimport marked from 'marked';\nimport demoText from './demoText.js';\n\nclass App extends Component\n{\n\n  constructor()\n  {\n    super();\n    this.state = {\n      text: demoText,\n      markedHTML: marked(demoText, {sanitize: true, breaks: true})\n    };\n  }\n\n  onTextChange = () =>\n  {\n    let newText = document.getElementById('editor').value;\n    this.setState({text: newText});\n    this.setState({markedHTML: marked(newText, {sanitize: true, breaks: true})});  \n  }\n\n  render() {\n  return (\n    <div className=\"App container-fluid h-100\">\n      <div className=\"row w-100 h-100\">\n        <Editor onTextChange={this.onTextChange} text={this.state.text}/>\n        <Previewer markedHTML={this.state.markedHTML}/>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}